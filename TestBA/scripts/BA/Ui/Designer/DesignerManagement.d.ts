declare module BA.Ui.Designer {
    class DesignerManagement {
        static userRepliedYes: boolean;
        static drake: any;
        static expandFirstNode: boolean;
        static RefreshDesignPartial: boolean;
        static SuccessfulNodeKey: any;
        static wizzardCreateClicked?: boolean;
        static newConfigurationUrl: string;
        private static _FilterTimer;
        private static _NodeKey;
        private static _SubmitInProgress;
        static applyInProgress: boolean;
        private static _ParentOfRemovedNode;
        private static _LastClickedNodeId;
        private static _LastFocusedNodeId;
        private static _FocusedElement;
        static refreshCallback: any;
        private static _ScrollPosition;
        private static _AutoSubmitInProgress;
        private static _NodeAccessorForHandle;
        private static _NodeAccessor;
        private static _Json;
        private static _LastId;
        private static _LastAccept;
        private static upperScrollerCoo;
        private static lowerScrollerCoo;
        private static scrollUpInterval;
        private static scrollDownInterval;
        private static isAboveUpper;
        private static isAboveLower;
        private static wasDropAtEnd;
        private static elementOnMove;
        static UpdateDesignerVisibility(): void;
        static ToolboxTreeList_EndCallback(): void;
        static PreviewResizing(s: any, e: any): void;
        static Wizard_CreateSuccess(e: any): void;
        static Wizard_CreateError(e: any): void;
        static CreateButtonClicked(s: any, e: any): void;
        static ToolboxSearchKeyUp(s: any, e: any): void;
        static DoToolboxFiltering(s: any, e: any): void;
        static DesignPartial_Init(s: any, e: any): void;
        static DesignPartial_EndCallback(): void;
        static NodeClick(s: any, e: any): void;
        static PreviewConfigurationBeginCallback(s: any, e: any): void;
        static PreviewConfigurationEndCallback(s: any, e: any): void;
        static PreviewConfigurationShown(s: any, e: any): void;
        static PreviewConfigurationResize(s: any, e: any): void;
        static ShowPropertiesForNode(nodeKey: any): void;
        static PropertiesPanel_OnInit(s: any, e: any): void;
        static PropertiesPanel_OnBeginCallback(s: any, e: any): void;
        static PropertiesPanel_OnEndCallback(s: any, e: any): void;
        static PropertiesPanel_OnCallbackError(s: any, e: any): void;
        static OnCallbackError(s: any, e: any): void;
        static PropertiesAjaxForm_SubmitProperties(s: any, e: any, callback: any): void;
        static PropertiesAjaxForm_Submit(s: any, e: any): void;
        static SubmitTheForm(): void;
        static PropertiesAjaxForm_OnSuccess(s: any, e: any): void;
        static PropertiesAjaxForm_OnFailure(s: any, e: any): void;
        static PropertiesAjaxForm_InputGotFocus(s: any, e: any): void;
        static DesignTreeCallback_EndCallback(s: any, e: any): void;
        static RawGridDoubleClick(s: any, e: any): void;
        static Processing(yes: boolean): void;
        static InitDAD(): void;
        /** Helper method to prepare drag model and perform a callback. Also sets tab as dirty. */
        private static PrepareDragModelAndPerformCallback;
        static FindAllowedClasses(destinationClassTree: any, allowedClassesTree: any, result: any): any;
        static FindNodeById(id: any, allowedClassesTree: any): any;
        static HideAllChildNodes(id: any): void;
        static DndEnableToolboxPanel(): void;
        static DndEnableDesignPanel(): void;
        static OnRowClick(s: any, e: any): void;
        static ScrollTowardsDown(): void;
        static ScrollTowardsUp(): void;
        static EndAutoscroll_Up(): void;
        static EndAutoscroll_Down(): void;
        private static PositionLowerAutoscroll;
        private static LastDropCallback;
    }
}
